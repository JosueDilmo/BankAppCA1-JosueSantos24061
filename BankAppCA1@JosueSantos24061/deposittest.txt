public static void Deposit()
        {
            string path = "c:/Users/DELL/Desktop/Josue/BSC2 - 0921 - Semester 1/Object-Oriented Programming/Assignment CA1 and CA2/BankAppCA1@JosueSantos24061/BankFiles";
            bool optionLoop = true;
            while (optionLoop)
            {
                Console.Write("Enter Account Code: ");
                string accountCode = Console.ReadLine();
                Console.WriteLine("1. Deposit in Current Account");
                Console.WriteLine("2. Deposit in Savings Account");
                Console.Write("Option: ");
                if (Int32.TryParse(Console.ReadLine(), out int optionUser))
                {
                    switch (optionUser)
                    {
                        case 1:
                            optionLoop = false;
                            string currentToWrite = $"{path}/{accountCode}-current.txt";
                            Console.Write("Please, Enter Amount: ");
                            if (decimal.TryParse(Console.ReadLine(), out decimal depositAmount) && depositAmount <= 0)
                            {
                                try
                                {
                                    using (StreamWriter sw = new StreamWriter(currentToWrite, true))
                                    {
                                        CurrentAccBalance accountBalance = new();
                                        accountBalance.Balance = depositAmount;
                                        string formartedDeposit = DateTime.Now.ToString("yyyy-MM-dd") + $":Deposit:{depositAmount}:{accountBalance.Balance}";
                                        sw.WriteLine(formartedDeposit);
                                    }
                                }
                                catch (Exception e)
                                {
                                    Console.WriteLine($"The {currentToWrite} file could not be written");
                                    Console.WriteLine(e.Message);
                                }
                            }
                            else 
                            {
                                Console.WriteLine("Please, Enter a Valid Amount"); 
                            }
                            break;

                        case 2:
                            optionLoop = false;
                            string savingsToWrite = $"{path}/{accountCode}-savings.txt";
                            try
                            {
                                using (StreamWriter sw = new StreamWriter(savingsToWrite, true))
                                {
                                    

                                }

                            }
                            catch (Exception e)
                            {
                                Console.WriteLine($"The {savingsToWrite} file could not be written");
                                Console.WriteLine(e.Message);

                            }
                            break;

                        default:
                            optionLoop = true;
                            break;
                    }
                }
                else
                {
                    Console.WriteLine("Please, choose a valid option.");
                    Driver.OutputSeparator(); // Simulate new screen
                }
            }




        }