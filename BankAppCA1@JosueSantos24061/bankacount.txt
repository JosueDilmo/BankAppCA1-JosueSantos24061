       public void DeleteCustomer()
        {
            return;
        }

        public void ListDepositTransaction()
        {
            
        }

        public void ListWithdrawlTransaction()
        {
            return;
        }

        public void TransactionDeposit()
        {
           
        }

        public void TransactionWithdrawl()
        {
            return;
        }

        public void ListCustomer()
        {
            return;
        }





        public decimal Balance { get; private set; }

        public BankAccount(decimal initialBalance)
        {
            if (initialBalance < 0)
                throw new ArgumentOutOfRangeException("The initial balance must be greater or equals to 0");
            Balance = initialBalance;
        }

        public bool TryDeposit(decimal amount)
        {
            if (amount <= 0)
                return false;
            Balance += amount;
            return true;
        }

        public bool TryWithdraw(decimal amount)
        {
            if (amount <= 0 || Balance - amount < 0)
                return false;
            Balance -= amount;
            return true;
        }